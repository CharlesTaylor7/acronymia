name: Verify
on:
  pull_request: {}
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Cache Cargo
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules-

      - name: Cargo Dependencies
        run: |
          cargo update

      - name: Rust Format
        run: |
          cargo fmt --check

      - name: Unit Tests
        run: |
          cargo test --features=ssr

      # There are no client side tests, but we should ensure it builds
      - name: Build Client
        run: |
          cargo build --features=hydrate

#       TODO: debug playwright
#       My working theory is that the websocket is failing to connect,
#       which leaves the app in its default state.
#
#      - name: Playwright Tests
#        run: |
#          cargo install --features no_downloads --locked cargo-leptos || true
#          npm install
#          cargo leptos end-to-end
